//Array rotation
public class Solution {
    public void Rotate(int[] nums, int k) {
        int n = nums.Length;
        k%=n; //because after every n rotation, the initial array resurfaces
        //basic validation
        if(n==0||n==1)
            return;
        else
        {
            reverseArray(nums,0,n-1);
            reverseArray(nums,k,n-1);
            reverseArray(nums,0,k-1);
        }
    }
    private void reverseArray(int[] nums,int startIndex,int lastIndex){
        int temp = 0;
        int i= startIndex,j=lastIndex;
        while(i<j)
        {
            temp = nums[i];
            nums[i]=nums[j];
            nums[j]=temp;
            i++;
            j--;
        }
            
        }
    }
